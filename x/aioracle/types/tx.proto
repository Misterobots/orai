syntax = "proto3";
package oraichain.orai.aioracle;
//import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
option go_package = "github.com/oraichain/orai/x/aioracle/types";
import "x/aioracle/types/types_ai_oracle.proto";
import "google/api/annotations.proto";
import "google/protobuf/any.proto";
import "cosmos/base/v1beta1/coin.proto";

// Msg defines the aioracle Msg service.
service Msg {
  // Create a new AI request
  rpc CreateAIOracle(MsgSetAIOracleReq) returns (MsgSetAIOracleRes) {
    option (google.api.http) = {
      // The `parent` captures the parent resource name, such as "shelves/1".
      post: "/aioracle/req"
      body: "*"
    };
  };

  rpc CreateReport(MsgCreateReport) returns (MsgCreateReportRes) {
    option (google.api.http) = {
      // The `parent` captures the parent resource name, such as "shelves/1".
      post: "/aioracle/rep"
      body: "*"
    };
  };
  rpc CreateTestCaseReport(MsgCreateTestCaseReport) returns (MsgCreateTestCaseReportRes) {
    option (google.api.http) = {
      // The `parent` captures the parent resource name, such as "shelves/1".
      post: "/aioracle/tcrep"
      body: "*"
    };
  };
}

// MsgSetAIOracle submit ai request metadata onto Oraichain
message MsgSetAIOracleReq {
  option (gogoproto.goproto_stringer) = true;
  string request_id = 1 [(gogoproto.customname) = "RequestID"];
  string contract = 2;
  string creator = 3;
  int64 validator_count = 5;
  string fees = 6 [(gogoproto.jsontag) = "transaction_fee,omitempty"];
  bytes input = 7;
  bool test_only = 8;
}
// MsgSetAIOracleRes returns store result data.
message MsgSetAIOracleRes{
  option (gogoproto.goproto_stringer) = true;
  string request_id = 1 [(gogoproto.customname) = "RequestID"];
  string contract = 2;
  string creator = 3;
  int64 validator_count = 5;
  string fees = 6 [(gogoproto.jsontag) = "transaction_fee,omitempty"];
  bytes input = 7;
  bool test_only = 8;
}

message MsgCreateReport {
  BaseReport base_report = 1;
  repeated Result data_source_results = 2 [(gogoproto.moretags) = "json:\"data_source_result\"", (gogoproto.customname) = "DataSourceResults"];
  string result_status = 3 [(gogoproto.jsontag) = "result_status,omitempty"];
  bytes aggregated_result = 4 [(gogoproto.jsontag) = "aggregated_result,omitempty"];
}

message MsgCreateTestCaseReport {
  BaseReport base_report = 1;
  repeated ResultWithTestCase results_with_test_case = 2;
}

// MsgAddReporterRes returns added reporter data.
message MsgCreateReportRes {
    BaseReport base_report = 1;
    repeated Result data_source_results = 2 [(gogoproto.moretags) = "json:\"data_source_result\"", (gogoproto.customname) = "DataSourceResults"];
    string result_status = 3 [(gogoproto.jsontag) = "result_status,omitempty"];
    bytes aggregated_result = 4 [(gogoproto.jsontag) = "aggregated_result,omitempty"];
}

// MsgAddReporterRes returns added reporter data.
message MsgCreateTestCaseReportRes {
    BaseReport base_report = 1;
    repeated ResultWithTestCase results_with_test_case = 2;
}
